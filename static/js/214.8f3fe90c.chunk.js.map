{"version":3,"file":"static/js/214.8f3fe90c.chunk.js","mappings":"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","sources":["webpack://project/./src/views/teacher/teacher.module.css?8e0f","api/teacher.js","views/teacher/addList.jsx","views/teacher/Index.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"teacher_card__qJJay\"};","import request from '../utils/request'\r\nexport function getTeacherList (data){\r\n    return request({\r\n        url:\"/teacher/teacherList\",\r\n        method:'post',\r\n        data\r\n})\r\n}\r\nexport function addTeacher(data) {\r\n    return request({\r\n        url: '/teacher/addTeacher',\r\n        method: 'post',\r\n        data\r\n    })\r\n}\r\n/**\r\n * 编辑教师接口\r\n 参数同新增教师 额外加id\r\n */\r\nexport function editTeacher(data) {\r\n    return request({\r\n        url: '/teacher/editTeacher',\r\n        method: 'post',\r\n        data\r\n    })\r\n}\r\n/**\r\n * 删除单个教师接口\r\n * id:id\r\n */\r\nexport function deletesOne(data) {\r\n    return request({\r\n        url: '/teacher/delete',\r\n        method: 'post',\r\n        data\r\n    })\r\n}\r\n/**\r\n * 批量删除\r\n * ids:[id数组]\r\n */\r\n\r\nexport function batchDelete(data) {\r\n    return request({\r\n        url: '/teacher/batchDelete',\r\n        method: 'post',\r\n        data\r\n    })\r\n}","import React, { Component } from 'react'\r\nimport { Modal, Button } from 'antd';\r\nimport { Form, message } from 'antd';\r\nimport { Row, Col, Input } from 'antd';\r\nimport { Select } from 'antd';\r\nimport { DatePicker } from 'antd';\r\nimport { Radio } from 'antd';\r\nimport moment from 'moment';\r\nimport { addTeacher } from '../../api';\r\nimport { editTeacher } from '../../api/teacher';\r\n\r\n\r\nconst { RangePicker } = DatePicker;\r\nconst { Option } = Select;\r\n\r\n\r\nexport default class addList extends Component {\r\n    handleCancel = () => {\r\n        this.props.toggleVis(false)\r\n    }\r\n    handleOk = () => {\r\n        this.myRef.validateFields().then(res => {\r\n            const {id}=this.props.record\r\n            const birth = moment(res.birth).format('DD-MM-YYYY');\r\n            const startday = moment(res.date).format('DD-MM-YYYY');\r\n            const fn= this.props.title=='edit techer'? editTeacher({ ...res, birth, startday,id })\r\n            :addTeacher({ ...res, birth, startday })\r\n                    fn.then(data => {\r\n                    if(data.code===0){\r\n                        message.success(data.msg);\r\n                        //隐藏弹框\r\n                        this.props.toggleVis(false);\r\n                        this.myRef.resetFields()\r\n                        this.props.loadData()\r\n                   }\r\n                }     \r\n             );\r\n        }\r\n\r\n        ).catch(err => console.log(err))\r\n    }\r\n    componentDidUpdate(){\r\n        console.log(this.props.record)\r\n    }\r\n    render() {\r\n        const { visible,title } = this.props\r\n        return (\r\n            <div>\r\n                <Modal title={title}\r\n                    visible={visible}\r\n                    width='800px'\r\n                    onOk={this.handleOk}\r\n                    onCancel={this.handleCancel}\r\n                >\r\n                    <Form\r\n                        name=\"basic\"\r\n                        labelCol={{ span: 8 }}\r\n                        wrapperCol={{ span: 16 }}\r\n                        ref={a => this.myRef = a}\r\n                    >\r\n                      <Row>\r\n                            <Col span={12}>\r\n                                <Form.Item\r\n                                    label=\"姓名\"\r\n                                    name=\"name\"\r\n                                    rules={\r\n                                        [\r\n                                            { required: true, message: \"姓名不能为空\" }\r\n                                        ]\r\n                                    }\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    label=\"性别\"\r\n                                    name=\"gender\"\r\n                                    rules={\r\n                                        [\r\n                                            { required: true, message: \"性别不能为空\" }\r\n                                        ]\r\n                                    }\r\n                                >\r\n                                    <Select>\r\n                                        <Option value={1}>男</Option>\r\n                                        <Option value={2}>女</Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    label=\"级别\"\r\n                                    name=\"level\"\r\n                                    rules={\r\n                                        [\r\n                                            { required: true, message: \"级别不能为空\" }\r\n                                        ]\r\n                                    }\r\n                                >\r\n                                    <Select>\r\n                                        <Option value={1}>初级教师</Option>\r\n                                        <Option value={2}>中级教师</Option>\r\n                                        <Option value={3}>高级教师</Option>\r\n                                        <Option value={4}>特级教师</Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    label=\"年级\"\r\n                                    name=\"grade\"\r\n                                    rules={\r\n                                        [\r\n                                            { required: true, message: \"年级不能为空\" }\r\n                                        ]\r\n                                    }\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    label=\"科目\"\r\n                                    name=\"subject\"\r\n                                    rules={\r\n                                        [\r\n                                            { required: true, message: \"科目不能为空\" }\r\n                                        ]\r\n                                    }\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    label=\"入职日期\"\r\n                                    name=\"date\"\r\n                                    rules={\r\n                                        [\r\n                                            { required: true, message: \"入职日期不能为空\" }\r\n                                        ]\r\n                                    }\r\n                                >\r\n                                    <DatePicker style={{width:\"100%\"}}/>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item\r\n                                    label=\"类型\"\r\n                                    name=\"type\"\r\n                                    rules={\r\n                                        [\r\n                                            { required: true, message: \"类型不能为空\" }\r\n                                        ]\r\n                                    }\r\n                                >\r\n                                    <Radio.Group>\r\n                                        <Radio value=\"1\">全职</Radio>\r\n                                        <Radio value=\"2\">兼职</Radio>\r\n                                    </Radio.Group>\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    label=\"手机号码\"\r\n                                    name=\"tel\"\r\n                                    rules={\r\n                                        [\r\n                                            { required: true, message: \"手机号码不能为空\" }\r\n                                        ]\r\n                                    }\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    label=\"毕业院校\"\r\n                                    name=\"school\"\r\n                                    rules={\r\n                                        [\r\n                                            { required: true, message: \"毕业院校不能为空\" }\r\n                                        ]\r\n                                    }\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    label=\"出生年月\"\r\n                                    name=\"birth\"\r\n                                    rules={\r\n                                        [\r\n                                            { required: true, message: \"出生年月不能为空\" }\r\n                                        ]\r\n                                    }\r\n                                >\r\n                                    <DatePicker style={{width:\"100%\"}}/>\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    label=\"家庭住址\"\r\n                                    name=\"address\"\r\n                                    rules={\r\n                                        [\r\n                                            { required: true, message: \"家庭住址不能为空\" }\r\n                                        ]\r\n                                    }\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    label=\"学历\"\r\n                                    name=\"education\"\r\n                                    rules={\r\n                                        [\r\n                                            { required: true, message: \"学历不能为空\" }\r\n                                        ]\r\n                                    }\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Modal>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, Form, Input } from 'antd'\r\nimport { Row, Col, Button } from 'antd';\r\nimport { Select } from 'antd';\r\nimport { Table, } from 'antd';\r\nimport style from './teacher.module.css'\r\nimport {  } from '../../api/teacher';\r\nimport AddList from './addList';\r\nimport { Pagination } from 'antd';\r\nimport moment from 'moment';\r\nimport { deletesOne,batchDelete,getTeacherList } from '../../api/teacher';\r\nimport { message } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\nexport default class teacher extends Component {\r\n  state={\r\n        disable:true,\r\n        data:[],\r\n        pageData:{\r\n          page:1,\r\n          pageSize:10\r\n        },\r\n        loading:false,\r\n        visible:false,\r\n        total:0,\r\n        formData:{},\r\n        record:{},\r\n        title:'',\r\n        selectedRowKeys:[]\r\n  }\r\n  formRef = React.createRef()\r\n  loadData=()=>{\r\n    this.setState({loading:true})\r\n    const {pageData,formData}=this.state\r\n    getTeacherList({...formData,...pageData}).\r\n    then(res=>this.setState({\r\n      data:res.data,\r\n      loading:false,\r\n      total: res.total,\r\n    }))\r\n  }\r\n  search = () => {\r\n    const formData = this.formRef.current.getFieldsValue(true);\r\n    this.setState({formData},()=>{\r\n      this.loadData();\r\n      this.setState({formData:{}})\r\n    \r\n    })\r\n  }\r\n  reset=()=>{\r\n    this.formRef.current.resetFields()\r\n    \r\n    this.setState( \r\n      {page:1,\r\n      pageSize:10,\r\n    },()=>{\r\n      this.loadData()\r\n    })\r\n  }\r\n  showModel=()=>{\r\n    this.setState({visible:true,title:'add employee'});\r\n    this.addRef.myRef.resetFields();\r\n    // this.formRef.addRef.resetFields()\r\n  }\r\n  toggleVis=(vis)=>{\r\n    this.setState({visible:vis})\r\n  }\r\n\r\n  pageChange = (page, pageSize) => {\r\n    \r\n    this.setState({\r\n      pageData: {\r\n        page,\r\n        pageSize\r\n      }\r\n    }, function () {\r\n      this.loadData()\r\n    })\r\n\r\n  }\r\n  edit=(record)=>{\r\n    this.setState({\r\n      record,\r\n    visible:true,\r\n      title:'edit techer'\r\n  },\r\n    ()=>{\r\n      const birth = moment(record.birth);\r\n      const date = moment(record.date);\r\n      this.addRef.myRef.setFieldsValue({...record,birth,date});\r\n    });\r\n  }\r\n  singleDelete=(id)=>{\r\n    deletesOne({id}).then(res=>\r\n      {\r\n        this.loadData();\r\n        if(res.code===0){\r\n          message.success(res.msg);\r\n        }\r\n      });\r\n  }\r\n  DeleteMany=()=>{\r\n    batchDelete({ids:this.state.selectedRowKeys}).then(\r\n      res=>{\r\n    \r\n        this.loadData();\r\n        if(res.code===0){\r\n          message.success(res.msg);\r\n          this.setState({disable:true})\r\n        }\r\n      }\r\n    )\r\n  }\r\n  selectChange=(selectedRowKeys)=>{\r\n    this.setState({selectedRowKeys,\r\n    disable:selectedRowKeys.length?false:true\r\n    })\r\n  }\r\n  componentDidMount(){\r\n    this.loadData();\r\n   \r\n  }\r\n  render() {\r\n    const {disable,data,loading,visible,total,record,title,selectedRowKeys}=this.state\r\n    const columns = [\r\n      {\r\n        title: \"num\",\r\n        dataIndex: \"index\",\r\n        key: \"index\",\r\n        align:'center',\r\n        render:(text,record,index)=>{\r\n          return index+1\r\n        }\r\n      },\r\n      {\r\n        title: \"name\",\r\n        dataIndex: \"name\",\r\n        key: \"name\",\r\n        align:'center'\r\n      },\r\n      {\r\n        title: \"gender\",\r\n        dataIndex: \"gender\",\r\n        key: \"gender\",\r\n        align:'center',\r\n        render:(text)=>{\r\n          return text==1?'male':'female'\r\n        }\r\n      },\r\n      {\r\n        title: \"level\",\r\n        dataIndex: \"level\",\r\n        key: \"level\",\r\n        align:'center',\r\n        render:(text)=>{\r\n          if(text==1){\r\n            return 'junior';\r\n          }else if(text==2){\r\n            return 'intermedia'\r\n          }return 'senior'\r\n        }\r\n      },\r\n      {\r\n        title: \"grade\",\r\n        dataIndex: \"grade\",\r\n        key: \"grade\",\r\n        align:'center'\r\n      },\r\n      {\r\n        title: \"startday\",\r\n        dataIndex: \"date\",\r\n        key: \"date\",\r\n        align:'center'\r\n      },\r\n      {\r\n        title: \"type\",\r\n        dataIndex: \"type\",\r\n        key: \"type\",\r\n        align:'center',\r\n        render:(text)=>{\r\n          if(text==1){\r\n            return 'fulltime'\r\n          }return 'partime'\r\n        }\r\n      },\r\n      {\r\n        title: \"school\",\r\n        dataIndex: \"school\",\r\n        key: \"school\",\r\n        align:'center'\r\n      },\r\n      {\r\n        title: \"DOB\",\r\n        dataIndex: \"birth\",\r\n        key: \"birth\",\r\n        align:'center'\r\n      },\r\n      {\r\n        title: \"address\",\r\n        dataIndex: \"address\",\r\n        key: \"address\",\r\n        align:'center'\r\n      },\r\n      {\r\n        title: \"operation\",\r\n        dataIndex: \"operation\",\r\n        key: \"operation\",\r\n        fixed:'right',\r\n        align:'center',\r\n        width:'160px',\r\n        render:(text,record)=>{\r\n          return(\r\n            <div>\r\n              <Button \r\n              type='primary' \r\n              size='small'\r\n              onClick={()=>this.edit(record)}\r\n              >&nbsp;&nbsp;Edit&nbsp;&nbsp; </Button>\r\n              <Button \r\n              danger size='small' \r\n              className='mt ml'\r\n              onClick={()=>{this.singleDelete(record.id)}}\r\n              > \r\n              Delete</Button>\r\n            </div>\r\n          )\r\n        }\r\n      },\r\n    ]\r\n    return (\r\n      <div>\r\n        <Card className={style.card}>\r\n          <Form ref={this.formRef}\r\n            labelCol={{\r\n              span: 8,\r\n            }}\r\n            wrapperCol={{\r\n              span: 16,\r\n            }}>\r\n            <Row gutter={16}>\r\n              <Col className=\"gutter-row\" span={6}>\r\n                <Form.Item\r\n                  label=\"name\"\r\n                  name=\"name\"\r\n                >\r\n                  <Input />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col className=\"gutter-row\" span={6}>\r\n              <Form.Item\r\n                  label=\"subject\"\r\n                  name=\"subject\"\r\n                >\r\n                  <Select >\r\n                    <Option value=\"\">all</Option>\r\n                    <Option value=\"语文\">Chinese</Option>\r\n                    <Option value=\"数学\">Math</Option>\r\n                    <Option value=\"英语\">English</Option>\r\n                    <Option value=\"物理\">Physics</Option>\r\n                    <Option value=\"化学\">Chemistry</Option>\r\n                    <Option value=\"生物\">Biology</Option>\r\n\r\n                  </Select>\r\n                  </Form.Item>\r\n              </Col>\r\n              <Col className=\"gutter-row\" span={6}>\r\n                <Form.Item\r\n                  label=\"phone\"\r\n                  name=\"phone\"\r\n                >\r\n                  <Input />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col className=\"gutter-row\" span={6}>\r\n                <Button className='ml' onClick={this.search}> search  </Button>\r\n                <Button className='ml'onClick={this.reset}> reset</Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Card>\r\n        <Card className={style.card}>\r\n          <Button className='ml' danger disabled={disable}\r\n          onClick={this.DeleteMany}\r\n          > BatchDelete </Button>\r\n          <Button className='ml' onClick={this.showModel}> New Employee</Button>\r\n        </Card>\r\n        <Card className={style.card}>\r\n        <Table \r\n        loading={loading}\r\n        dataSource={data} \r\n        columns={columns} \r\n        scroll={{x:1400}}\r\n        rowKey={(record)=>record.id}\r\n        pagination={false}\r\n        rowSelection={{\r\n          type: 'checkbox',\r\n          selectedRowKeys: selectedRowKeys,\r\n          onChange: this.selectChange\r\n         \r\n        }}\r\n        />\r\n             <Pagination showQuickJumper \r\n             showSizeChanger\r\n             total={total} \r\n         \r\n             onChange={this.pageChange} \r\n             />\r\n        </Card>\r\n        <AddList \r\n        ref={a=>this.addRef=a}\r\n        visible={visible} \r\n        toggleVis={this.toggleVis} \r\n        loadData={this.loadData}\r\n        record={record}\r\n        title={title}\r\n        ></AddList>\r\n   \r\n      </div >\r\n    )\r\n  }\r\n}\r\n"],"names":["getTeacherList","data","request","url","method","editTeacher","deletesOne","batchDelete","Option","DatePicker","Select","addList","handleCancel","props","toggleVis","handleOk","myRef","validateFields","then","res","id","record","birth","moment","format","startday","date","title","addTeacher","code","message","msg","resetFields","loadData","catch","err","console","log","this","visible","width","onOk","onCancel","name","labelCol","span","wrapperCol","ref","a","label","rules","required","value","style","Component","teacher","state","disable","pageData","page","pageSize","loading","total","formData","selectedRowKeys","formRef","React","setState","search","current","getFieldsValue","reset","showModel","addRef","vis","pageChange","edit","setFieldsValue","singleDelete","DeleteMany","ids","selectChange","length","columns","dataIndex","key","align","render","text","index","fixed","type","size","onClick","danger","className","gutter","disabled","dataSource","scroll","x","rowKey","pagination","rowSelection","onChange","showQuickJumper","showSizeChanger"],"sourceRoot":""}