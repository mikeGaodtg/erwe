{"version":3,"file":"static/js/529.191cf0a8.chunk.js","mappings":"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","sources":["webpack://project/./src/views/personal/personal.module.css?4b4a","component/calender/Index.jsx","views/personal/Index.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"personal_card__6J73F\",\"timer\":\"personal_timer__Y+ti5\",\"red\":\"personal_red__PImEG\",\"events\":\"personal_events__HQaIB\",\"ant-badge-status\":\"personal_ant-badge-status__Sa3hr\",\"notes-month\":\"personal_notes-month__0feZW\"};","import { Badge, Calendar } from 'antd';\r\nimport React from 'react';\r\n\r\nconst getListData = (value) => {\r\n  let listData;\r\n\r\n  switch (value.date()) {\r\n    case 8:\r\n      listData = [\r\n        {\r\n          type: 'warning',\r\n          content: 'This is warning event.',\r\n        },\r\n        {\r\n          type: 'success',\r\n          content: 'This is usual event.',\r\n        },\r\n      ];\r\n      break;\r\n\r\n    case 10:\r\n      listData = [\r\n        {\r\n          type: 'warning',\r\n          content: 'This is warning event.',\r\n        },\r\n        {\r\n          type: 'success',\r\n          content: 'This is usual event.',\r\n        },\r\n        {\r\n          type: 'error',\r\n          content: 'This is error event.',\r\n        },\r\n      ];\r\n      break;\r\n\r\n    case 15:\r\n      listData = [\r\n        {\r\n          type: 'warning',\r\n          content: 'This is warning event',\r\n        },\r\n        {\r\n          type: 'success',\r\n          content: 'This is very long usual event。。....',\r\n        },\r\n        {\r\n          type: 'error',\r\n          content: 'This is error event 1.',\r\n        },\r\n        {\r\n          type: 'error',\r\n          content: 'This is error event 2.',\r\n        },\r\n        {\r\n          type: 'error',\r\n          content: 'This is error event 3.',\r\n        },\r\n        {\r\n          type: 'error',\r\n          content: 'This is error event 4.',\r\n        },\r\n      ];\r\n      break;\r\n\r\n    default:\r\n  }\r\n\r\n  return listData || [];\r\n};\r\n\r\nconst getMonthData = (value) => {\r\n  if (value.month() === 8) {\r\n    return 1394;\r\n  }\r\n};\r\n\r\nconst App = () => {\r\n  const monthCellRender = (value) => {\r\n    const num = getMonthData(value);\r\n    return num ? (\r\n      <div className=\"notes-month\">\r\n        <section>{num}</section>\r\n        <span>Backlog number</span>\r\n      </div>\r\n    ) : null;\r\n  };\r\n\r\n  const dateCellRender = (value) => {\r\n    const listData = getListData(value);\r\n    return (\r\n      <ul className=\"events\">\r\n        {listData.map((item) => (\r\n          <li key={item.content}>\r\n            <Badge status={item.type} text={item.content} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  };\r\n\r\n  return <Calendar dateCellRender={dateCellRender} monthCellRender={monthCellRender} />;\r\n};\r\n\r\nexport default App;","import React, { Component } from 'react'\r\nimport { Layout } from 'antd';\r\nimport style from './personal.module.css';\r\nimport { Card } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { getInfo } from '../../api';\r\nimport { loginAction } from '../../redux/action/loginAction';\r\nimport Calendar from '../../component/calender/Index';\r\nimport { Col, Row, Statistic } from 'antd';\r\nconst { Countdown } = Statistic;\r\n\r\nclass personal extends Component {\r\n\r\n  timeOfDay = () => {\r\n    var myDate = new Date();\r\n    var currentHour = myDate.getHours();\r\n    var msg;\r\n    if (currentHour < 12)\r\n      msg = 'Good Morning';\r\n    else if (currentHour == 12)\r\n      msg = 'Good Noon';\r\n    else if (currentHour >= 12 && currentHour <= 17)\r\n      msg = 'Good Afternoon';\r\n    else if (currentHour >= 17 && currentHour <= 24)\r\n      msg = 'Good Evening';\r\n    return msg\r\n  }\r\n  greeting = (time) => {\r\n    if (time == 'Good Morning') {\r\n      return 'wish you have a exciting day'\r\n    }\r\n    else if (time == 'Good Noon') {\r\n      return 'what is your lunch today?'\r\n    }\r\n    else if (time == 'Good Afternoon') {\r\n      return 'ready to home?'\r\n    }\r\n    else if (time == 'Good Evening') {\r\n      return 'have a good sleep'\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  onFinish = () => {\r\n    console.log('finished!');\r\n  };\r\n\r\n  onChange = (val) => {\r\n    if (4.95 * 1000 < val && val < 5 * 1000) {\r\n      console.log('changed!');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const deadline = Date.now() + 1000 * 60 * 60 * 24 * 2 + 1000 * 30; // Moment is also OK\r\n    const { nickname } = this.props.res.loginReducer\r\n    return (\r\n      <div>\r\n        <Card className={style.card}>\r\n          <h1>{`${this.timeOfDay()}! ${nickname} ,${this.greeting(this.timeOfDay())}`}</h1>\r\n        </Card>\r\n        <Card className={style.card}>\r\n          <Row gutter={16}>\r\n            <Col span={12}>\r\n              <Countdown title=\"Countdown\" value={deadline} onFinish={this.onFinish} />\r\n            </Col>\r\n            <Col span={12}>\r\n              <Countdown title=\"Million Seconds\" value={deadline} format=\"HH:mm:ss:SSS\" />\r\n            </Col>\r\n            <Col\r\n              span={24}\r\n              style={{\r\n                marginTop: 32,\r\n              }}\r\n            >\r\n              <Countdown title=\"Day Level\" value={deadline} format=\"D 天 H 时 m 分 s 秒\" />\r\n            </Col>\r\n            <Col span={12}>\r\n              <Countdown title=\"Countdown\" value={Date.now() + 10 * 1000} onChange={this.onChange} />\r\n            </Col>\r\n          </Row>\r\n        </Card>\r\n        <Card className={style.card}>\r\n          <Calendar></Calendar>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default connect(\r\n  state => ({ res: state }), { loginAction }\r\n)(personal)"],"names":["dateCellRender","value","listData","date","type","content","getListData","className","map","item","status","text","monthCellRender","num","month","getMonthData","Countdown","Statistic","personal","timeOfDay","msg","currentHour","Date","getHours","greeting","time","onFinish","console","log","onChange","val","deadline","now","nickname","this","props","res","loginReducer","style","gutter","span","title","format","marginTop","Component","connect","state","loginAction"],"sourceRoot":""}